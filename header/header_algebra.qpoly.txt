
Algebras of Bounded-Degree and Quotient Polynomials

Overview
========
This file formalizes, in the Coq proof assistant and building upon the MathComp libraries, the algebraic structures of polynomials with bounded degree as well as quotient rings of polynomials modulo a fixed modulus. The main goal is to provide rigorous constructions and foundational results for the types `{poly_n R}` (polynomials of degree less than or equal to `n` over a ring `R`) and `{poly %/ p}` (the quotient of the polynomial ring `R[X]` by the ideal generated by a monic polynomial `p`). The development sets up these types as instances of key algebraic structures—such as modules, vector spaces, finite types, and rings—and elaborates their algebraic bases and quotient operations, making them directly usable for further formalization in algebraic contexts, including field extensions.

Mathematical Objects and Concepts
=================================
1. **Polynomials of Bounded Degree (`{poly_n R}`):**
   - These represent the set of univariate polynomials over a ring `R` with degree at most `n` (i.e., `size p <= n`).
   - Internally, such polynomials are represented as "subtypes" of `{poly R}` (the type of all polynomials over `R`) with an explicit proof obligation bounding the size.
   - Notably, the construction ensures all algebraic operations on `{poly_n R}` preserve degree bounds, and provides instances for choice, countable, and finite types where applicable.
   - For fields `F`, `{poly_n F}` is also given the structure of a finite-dimensional vector space.

2. **Bases and Representations:**
   - Two important bases for `{poly_n R}` are provided and formalized:
     - **Monomial basis:** Elements represented as powers of `X` (`'nX^i` for `i < n`), with `polynX` being the tuple of all monomials up to degree `n-1`.
     - **Lagrange basis:** Given an injective sequence of sampling points `x : nat -> R`, the Lagrange polynomials `x.-lagrange_ i` form a basis adapted to value interpolation at these points.
   - Conversion and enumeration routines translate between tuple (vector) representations and polynomials (`poly_rV` and `rVpoly`), but these mechanics remain hidden from the main interface.

3. **Polynomial Quotients (`{poly %/ p}`):**
   - For a given polynomial `p : {poly R}`, the file defines the quotient ring `{poly %/ p}` as polynomials of degree less than that of a particular monic polynomial associated with `p`. Specifically, it ensures the modulus is monic and of degree at least two (falling back to `X` if not).
   - The quotient type is thus implemented as `{poly_(size (mk_monic p)).-1 R}` (i.e., polynomials of degree less than `deg(p)`).
   - The operations of addition, multiplication (defined using remainders modulo `p`), and scalar multiplication are given, making `{poly %/ p}` into a well-structured ring and module.
   - When the modulus `p` is irreducible over a field, `{poly %/ p}` inherits a field structure (this is discussed, although the full instance may be deferred to another file).

4. **Irreducibility and Cardinality:**
   - The file defines a Boolean decision procedure `irreducibleb` for irreducibility of polynomials in the bounded-degree setting, particularly geared for finite domains.
   - For finite base rings, cardinality formulas are given for both `{poly_n R}` and `{poly %/ p}`, reflecting the number of such polynomials as powers of the order of `R`.

Key Conventions and Notation
============================
- **Type Notations:** 
  - `{poly_n R}` denotes polynomials of degree at most `n` over ring `R`.
  - `{poly %/ p}` denotes the quotient ring of polynomials modulo `p`.
- **Naming:**
  - The prefix “npoly” is used for bounded-degree polynomials and related structures or lemmas (e.g., `npoly_rV`, `mk_npoly`, `npolyX`).
  - Functions and lemmas prefixed with `qpoly` or `in_qpoly` refer to construction or operations on quotient types.
  - Lagrange bases and polynomials use the notation `x.-lagrange` and `x.-lagrange_ i`.
  - The `mk_monic` function ensures a valid monic modulus for quotients, handling edge cases.
- **Operators:**
  - `in_qpoly p` maps an arbitrary polynomial to its canonical representative in `{poly %/ h}` (reduction modulo the modulus).
  - Arithmetic and structural operations on bounded or quotient polynomials are defined to respect the degree bounds and equivalence relations.
- **Reserved Syntax:** 
  - Special notation and operator names (such as `'{poly_' n R }`, `''nX^' i`, `'qX`, etc.) are introduced for ease of use and clarity, and are marked with `Reserved Notation` blocks at the top of the file.
- **Mathematical Properties:**
  - Bounded-degree types and quotients are always enforced by construction, meaning all provided algebraic identities hold strictly within these subtypes.
  - Where appropriate, both propositional and Boolean forms of key predicates are available (e.g., irreducibility).
- **Sectioning and Scoping:** 
  - The file is organized in sections corresponding to algebraic themes (bounded-degree polynomials, irreducibility, quotient structures, field structures, etc.).
  - Local canonical structures and HB (Hierarchical Builder) instances are declared locally to ensure type inference and structure building works smoothly in extended developments.
  - The `ring_scope` is often opened to streamline ring notations and avoid ambiguity.

Context for Use and Retrieval
=============================
This file forms the algebraic backbone for working with truncated polynomial systems, especially in the context of quotient rings, finite fields (via irreducible polynomials), and finite-dimensional polynomial vector spaces. All core constructions are formalized as first-class types with dependent bounds, and canonical algebraic operations are made available in ways that integrate seamlessly with the broader MathComp ecosystem.

When commenting or interpreting code chunks from this file:
- Recognize that `{poly_n R}` always tracks the degree bound with proofs, so any construction must respect this property.
- Operations on `{poly %/ p}` are always meant to be performed modulo a canonical monic representative (`mk_monic p`), with all structure maps (addition, multiplication, scalar multiplication) defined compatibly.
- Lagrange and monomial bases are available for proofs or computations involving coordinates or decompositions of polynomials.
- Enumeration, cardinality, and irreducibility decision procedures are implemented for finite base rings, supporting concrete combinatorial and algebraic reasoning.

Overall, the file provides a model of polynomial algebras “with the degrees built in”, suitable for applications in linear algebra, Galois theory, and computational algebra, and designed to interoperate with the MathComp formalizations of rings, vector spaces, and field extensions.
