
Galois Field Theory: Structures and Fundamental Results

Overview
========
This Coq module provides a formalization of the fundamental elements of Galois field theory within the Mathematical Components (MathComp) framework. Its aim is to rigorously define and relate the key mathematical objects at the heart of Galois theory—fields and their extensions, splitting fields, automorphism groups, fixed fields, traces, norms, and the Galois correspondence—using the strongly-typed machinery of Coq and MathComp. This file is foundational for further developments in algebra, allowing formal proofs of advanced results such as the Fundamental Theorem of Galois Theory, the structure of field automorphism groups, and criteria connecting properties of field extensions with their Galois groups.

Mathematical Scope and Representations
======================================

1. Fields and Field Extensions:
   - **Base Fields and Extensions**: Fields are represented via the type `fieldType`. Field extensions are types implementing the `fieldExtType F` interface, where `F` is the base field.
   - **Subfields and Subspaces**: Vector subspaces and subfields of an extension are denoted as `{vspace L}` and `{subfield L}` respectively, with `L` the ambient extension field.

2. Splitting Fields and Normal Extensions:
   - **Splitting Field**: The notion of a splitting field for a polynomial `p` over a base field `K` in an extension `E`—i.e., the minimal field over which `p` splits into linear factors—is formalized by the predicate `splittingFieldFor K p E`.
   - **Algebraic and Splitting Field Types**: The structure for splitting fields is captured by `splittingFieldType F`; an extension is a splitting field if constructed as the smallest field generated by the roots of a given polynomial. There is a canonical hierarchy of classes and mixins to ensure type safety and inheritance.

3. Field Homomorphisms and Automorphisms:
   - **Homomorphisms**: The predicate `kHom K E f` signifies that `f` is a ring endomorphism of the ambient field that fixes every element of subfield `K` and is a ring morphism on subfield `E`.
   - **Automorphisms**: The predicate `kAut K E f` augments `kHom` by requiring that `f` is a bijective endomorphism of `E` fixing `K`.
   - **Extension of Homomorphisms**: The `kHomExtend` construction provides a canonical extension of a field homomorphism when adding new algebraic elements.

4. Galois Groups and Their Elements:
   - **Automorphism Groups**: Automorphisms of a field extension are encoded as the group `gal_of E`, where `E` is a subspace or subfield. The notation `'Gal(E / K)` denotes the Galois group of automorphisms of `E` fixing the subfield `K`.
   - **Quotients and Group Structure**: The file carefully constructs Galois groups as quotients of automorphism groups, adapting the categorical composition of endomorphisms as group operation. The hierarchy ensures both finite and countable group structure where necessary.

5. Fixed Fields and the Galois Connection:
   - **Fixed Fields**: For a set of automorphisms `A`, the fixed field `fixedField A` is the subfield of elements left unchanged by all automorphisms in `A`.
   - **Galois Connection**: The file builds the classic Galois connection between subgroups of the Galois group and intermediate fields. Essential correspondences and inclusion reversals are formalized.

6. Traces, Norms, and Fundamental Invariants:
   - **Field Trace and Norm**: The `galTrace K E a` and `galNorm K E a` operations compute the trace (sum) and norm (product) over the Galois group acting on an element `a` in `E` relative to a base `K`.
   - **Morphisms**: These are treated as additive (trace) and multiplicative (norm) morphisms, with associated algebraic properties explicitly proven.

7. Normality, Separability, and Galois Extensions:
   - **Normal Extensions**: The predicate `normalField K E` encodes that all automorphisms of the full field fix `K` and map `E` to itself.
   - **Separable Extensions**: Linked via `separable K E`, handling the classical algebraic separability property.
   - **Galois Extensions**: The conjunction `galois K E` formalizes the definition of a Galois extension: a field extension that is both normal and separable.

8. The Fundamental Theorem of Galois Theory:
   - **Correspondence and Isomorphism**: The heart of the file formalizes the bijective correspondence between intermediate fields and subgroups of the Galois group, including detailed morphisms and isomorphisms between quotient groups and Galois groups of sub-extensions.
   - **Dimension Formulas**: The file proves relationships such as the equality between the degree of the extension and the order of the Galois group.

Key Conventions and Coding Patterns
===================================

- **Type Classes and Canonical Structures**: The file exploits the HB (Hierarchy-Builder) system to define, inherit, and propagate field, extension, and group structures. This allows reasoning at the appropriate level of generality while enabling type inference.

- **Notation**: Mathematical notations are faithfully reflected in the code:
    - `'Gal(E / K)`: The Galois group of `E` over `K`.
    - `<[x]>`, `@:`: denote linear spans and images.
    - `\sum_`, `\prod_`: denote summation and product over finite sets, often automorphism groups.
    - `<<_>>`: as in `<<K; a>>`, represents the smallest subspace/subfield containing specified subfields and elements.
    - `{:L}`: the "full" subspace or subfield of the ambient extension `L`.
    - `\is a polyOver K`: the Boolean predicate that a polynomial's coefficients are in subfield `K`.

- **Reflective Booleans**: Logical properties and algebraic facts are typically encoded as Boolean predicates with corresponding reflect lemmas, facilitating robust linking between Boolean computation and logical reasoning.

- **Implicit Arguments and Scope Control**: Set Implicit Arguments and localized open scopes (like `ring_scope`) remove boilerplate from signatures, making formal statements closer to standard mathematical language.

- **Sectioning and Modularization**: The file is highly modular, with sections for the definitions of structures, extension tools (like `kHomExtend`), theory of splitting fields, Galois group machinery, trace and norm theory, and the development of the Fundamental Theorem of Galois Theory. This facilitates targeted understanding and extension.

- **Compatibility and Deprecation Warnings**: The file includes deprecated aliases and usage instructions, ensuring that code targeting earlier MathComp versions is appropriately guided toward modern naming conventions.

Reading and Generating Documentation
====================================
With this docstring, one can interpret and document any code chunk in the file by situating it within the landscape described above. For example, lemmas about `kHom` and `kAut` explain algebraic maps and their fixing properties; definitions concerning `'Gal(E / K)` manage automorphism group structure; results on `fixedField` relate to the Galois correspondence; trace and norm lemmas connect to field-theoretic invariants. The notational conventions, type class mechanisms, and modular structure enable a mathematically precise, type-safe, and reusable formalization of Galois theory within Coq.

